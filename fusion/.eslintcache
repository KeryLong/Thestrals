[{"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\src\\index.js":"1","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\src\\FuseList.js":"2","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\src\\Text.js":"3"},{"size":347,"mtime":1610580377958,"results":"4","hashOfConfig":"5"},{"size":4930,"mtime":1610657309480,"results":"6","hashOfConfig":"5"},{"size":1611,"mtime":1610580116086,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1btbs09",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\src\\index.js",[],["16","17"],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\src\\FuseList.js",["18","19","20"],"import './FuseList.css'\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\n\r\nlet fuseObject = {\r\n    fuse1: {\r\n        date: 'January 10',\r\n        name: 'Access Alberta something something'\r\n    },\r\n    fuse2: {\r\n        date: 'January 14',\r\n        name: 'Big Buff other thing'\r\n    },\r\n    fuse3: {\r\n        date: 'February 01',\r\n        name: 'Country Count thingy thing'\r\n    }\r\n}\r\n\r\nfunction getMonth(date, type) {\r\n    let newDate = date.split(' ')\r\n    return (newDate[type].slice(0, 3))\r\n}\r\n\r\nconst FuseList = (props) => {\r\n    const [modal, setModal] = useState('')\r\n\r\n    function openModal() {\r\n        setModal('active')\r\n    }\r\n\r\n    function closeModal() {\r\n        setModal('')\r\n    }\r\n\r\n    return (\r\n        <div className='fuseContainer'>\r\n            <div className='fuseWeek'>\r\n                <h1 className='weekDates'>Jan 10-16</h1>\r\n            </div>\r\n            <div className=\"fuzeItem ui link card\" onClick={openModal}>\r\n                <div className=\"content\">\r\n                    <h2 className=\"fuzeTitle header\">{fuseObject.fuse1.name}</h2>\r\n                </div>\r\n                <div className=\"fuzeDate image\">\r\n                    <i className=\" huge calendar outline icon\"></i>\r\n                    <div className=\"date\">\r\n                        <p className=\"month\">{getMonth(fuseObject.fuse1.date, 0)}</p>\r\n                        <span className=\"day\">{getMonth(fuseObject.fuse1.date, 1)}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"fuzeItem ui link card\" onClick={openModal}>\r\n\r\n                <div className=\"middle aligned content\">\r\n                    <h2 className=\"fuzeTitle header\">{fuseObject.fuse2.name}</h2>\r\n                </div>\r\n                <div className=\"fuzeDate image\">\r\n                    <i className=\" huge calendar outline icon\"></i>\r\n                    <div className=\"date\">\r\n                        <p className=\"month\">{getMonth(fuseObject.fuse2.date, 0)}</p>\r\n                        <span className=\"day\">{getMonth(fuseObject.fuse2.date, 1)}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\" fuzeItem ui link card\" onClick={openModal}>\r\n\r\n                <div className=\"middle aligned content\">\r\n                    <h2 className=\"fuzeTitle header\">{fuseObject.fuse3.name}</h2>\r\n                </div>\r\n                <div className=\"fuzeDate image\">\r\n                    <i className=\" huge calendar outline icon\"></i>\r\n                    <div className=\"date\">\r\n                        <p className=\"month\">{getMonth(fuseObject.fuse3.date, 0)}</p>\r\n                        <span className=\"day\">{getMonth(fuseObject.fuse3.date, 1)}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={\"ui page modals dimmer transition \" + modal} >\r\n                <div className={'ui modal transition ' + modal}>\r\n                    <i className=\"close icon\" onClick={closeModal}></i>\r\n                    <div className=\"ui image content\">\r\n                        <img className='centered ui small image' src=\"https://s2.qwant.com/thumbr/0x380/f/2/a2d510008beabb9b85c8419f334814b052e00070af6d7cca6b218b9626ca3e/thumbs%20up%20child.jpg?u=https%3A%2F%2Fstatic.ecpbuilder.com%2Fclipart%2Fpeople%2Fthumbs%2520up%2520child.jpg&q=0&b=1&p=0&a=1\" alt='random ting'></img>\r\n                    </div>\r\n                    <div className=\"header\">\r\n                        Example Fuze\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <div className=\"ui header\">Description</div>\r\n                            <p>Random poop. All the poop. Never-ending poop. Where did all this poop come from? Someone please help. I am literally drowning in poop. Oh no, it's gotten into my sneakers. I paid $300 for these replica Nike shows from Back to the Future. Dear God, please save me from this poopy suffering.</p>\r\n                        </div>\r\n                        <div className='modalContent'>\r\n                        <div className='linkContent'>\r\n                        <div className=\"ui header\">Links</div>\r\n                        <a href='#'>www.silly.com</a><br></br>\r\n                        <a href='#'>www.goose.com</a>\r\n                        </div>\r\n                        <img className='ui small middle aligned image' src='https://s2.qwant.com/thumbr/0x380/d/5/edc623b484dfe71f16269638ec033424a016e6097506cbc5cb7122e15bc6e8/wordpress-google-maps-performance.png?u=https%3A%2F%2Fkinsta.com%2Fwp-content%2Fuploads%2F2019%2F01%2Fwordpress-google-maps-performance.png&q=0&b=1&p=0&a=1'></img>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default FuseList","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\src\\Text.js",[],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":98,"column":25,"nodeType":"27","endLine":98,"endColumn":37},{"ruleId":"25","severity":1,"message":"26","line":99,"column":25,"nodeType":"27","endLine":99,"endColumn":37},{"ruleId":"28","severity":1,"message":"29","line":101,"column":25,"nodeType":"27","endLine":101,"endColumn":335},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]