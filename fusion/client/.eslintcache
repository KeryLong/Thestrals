[{"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\index.js":"1","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Text.js":"2","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Logo.js":"3","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Footer.js":"4","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\NavBar.js":"5","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeList.js":"6","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeModal.js":"7","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeItem.js":"8"},{"size":428,"mtime":1611127241823,"results":"9","hashOfConfig":"10"},{"size":644,"mtime":1610670282744,"results":"11","hashOfConfig":"10"},{"size":311,"mtime":1611029418022,"results":"12","hashOfConfig":"10"},{"size":894,"mtime":1611127241823,"results":"13","hashOfConfig":"10"},{"size":1021,"mtime":1611029418025,"results":"14","hashOfConfig":"10"},{"size":9598,"mtime":1611270138727,"results":"15","hashOfConfig":"10"},{"size":2663,"mtime":1611268373505,"results":"16","hashOfConfig":"10"},{"size":1968,"mtime":1611270138728,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"cpfa4j",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\index.js",[],["37","38"],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Text.js",[],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Logo.js",[],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Footer.js",[],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\NavBar.js",["39","40","41","42"],"import React, { useState } from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = () => {\r\n  const [navLinkOpen, navLinkToggle] = useState(false);\r\n\r\n  const handleNavLinksToggle = () => {\r\n    navLinkToggle(!navLinkOpen);\r\n  };\r\n  const renderClasses = () => {\r\n    let classes = \"navlinks\";\r\n    if (navLinkOpen) {\r\n      classes += \" active\";\r\n    }\r\n    return classes;\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div>\r\n        <ul className={renderClasses()}>\r\n          <li className=\"link\">\r\n            <a href=\"#\">Home</a>\r\n          </li>\r\n          <li className=\"link\">\r\n            <a href=\"#\">About Us</a>\r\n          </li>\r\n          <li className=\"link\">\r\n            <a href=\"#\">Services</a>\r\n          </li>\r\n          <li className=\"link\">\r\n            <a href=\"#\">Contact Us</a>\r\n          </li>\r\n        </ul>\r\n        <div onClick={handleNavLinksToggle} className=\"hamburger-toggle\">\r\n          <i className=\"bars icon\"></i>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeList.js",["43","44","45","46"],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeModal.js",[],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeItem.js",["47","48","49"],"import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nfunction getDateShort(date, type) {\r\n    if(date==undefined){\r\n        return undefined\r\n    }\r\n    else{\r\n    let month = ''\r\n    let actualDate = date.split('T')\r\n    let splitDate = actualDate[0].split('-')\r\n    let dateNumber = parseInt(splitDate[type])\r\n    if (type === 1) {\r\n        switch (dateNumber) {\r\n            case 1: month = 'Jan'\r\n                break;\r\n            case 2: month = 'Feb'\r\n                break;\r\n            case 3: month = 'Mar'\r\n                break;\r\n            case 4: month = 'Apr'\r\n                break;\r\n            case 5: month = 'May'\r\n                break;\r\n            case 6: month = 'Jun'\r\n                break;\r\n            case 7: month = 'Jul'\r\n                break;\r\n            case 8: month = 'Aug'\r\n                break;\r\n            case 9: month = 'Sep'\r\n                break;\r\n            case 10: month = 'Oct'\r\n                break;\r\n            case 11: month = 'Nov'\r\n                break;\r\n            case 12: month = 'Dec'\r\n                break;\r\n        }\r\n        return month\r\n    } else {\r\n        return splitDate[type]\r\n    }\r\n}\r\n}\r\n\r\nconst FuzeItem = (props) => {\r\n    return (\r\n        <div className=\"fuzeItem ui link card\" onClick={() => {props.openModal(); props.chooseFuze(props.fuzeObject); props.getDateLong(props.fuzeObject.startDate) }}>\r\n            <div className=\"content\">\r\n                <h2 className=\"fuzeTitle header\">{props.fuzeObject.title}</h2>\r\n            </div>\r\n            <div className=\"fuzeDate image\">\r\n                <i className=\" huge calendar outline icon\"></i>\r\n                <div className=\"date\">\r\n                    <p className=\"month\">{getDateShort(props.fuzeObject.startDate, 1)}</p>\r\n                    <span className=\"day\">{getDateShort(props.fuzeObject.startDate, 2)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FuzeItem",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":23,"column":13,"nodeType":"56","endLine":23,"endColumn":25},{"ruleId":"54","severity":1,"message":"55","line":26,"column":13,"nodeType":"56","endLine":26,"endColumn":25},{"ruleId":"54","severity":1,"message":"55","line":29,"column":13,"nodeType":"56","endLine":29,"endColumn":25},{"ruleId":"54","severity":1,"message":"55","line":32,"column":13,"nodeType":"56","endLine":32,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":69,"column":9,"nodeType":"59","messageId":"60","endLine":94,"endColumn":10},{"ruleId":"57","severity":1,"message":"58","line":126,"column":9,"nodeType":"59","messageId":"60","endLine":151,"endColumn":10},{"ruleId":"61","severity":1,"message":"62","line":165,"column":49,"nodeType":"63","messageId":"64","endLine":165,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":174,"column":14,"nodeType":"67","messageId":"68","endLine":174,"endColumn":21},{"ruleId":"65","severity":1,"message":"69","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":5,"column":12,"nodeType":"63","messageId":"72","endLine":5,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":14,"column":9,"nodeType":"59","messageId":"60","endLine":39,"endColumn":10},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'testMap' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-global-assign","no-unsafe-negation"]