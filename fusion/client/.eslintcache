[{"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\index.js":"1","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Text.js":"2","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Logo.js":"3","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Footer.js":"4","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\NavBar.js":"5","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeList.js":"6","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeModal.js":"7","C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeItem.js":"8"},{"size":428,"mtime":1611127241823,"results":"9","hashOfConfig":"10"},{"size":644,"mtime":1610670282744,"results":"11","hashOfConfig":"10"},{"size":311,"mtime":1611029418022,"results":"12","hashOfConfig":"10"},{"size":894,"mtime":1611127241823,"results":"13","hashOfConfig":"10"},{"size":1021,"mtime":1611029418025,"results":"14","hashOfConfig":"10"},{"size":9139,"mtime":1611208903693,"results":"15","hashOfConfig":"10"},{"size":3781,"mtime":1611208763939,"results":"16","hashOfConfig":"10"},{"size":1884,"mtime":1611208875905,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cpfa4j",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\index.js",[],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Text.js",[],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Logo.js",[],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\Footer.js",[],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\NavBar.js",["37","38","39","40"],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeList.js",["41","42","43"],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeModal.js",["44"],"import React from 'react'\r\n\r\nfunction getDate(date, type) {\r\n    let month=''\r\n    let actualDate = date.split('T')\r\n    let splitDate = actualDate[0].split('-')\r\n    console.log(splitDate)\r\n    let monthNumber=parseInt(splitDate[1])\r\n    let dayNumber=splitDate[2]\r\n    switch(monthNumber){\r\n            case 1: month = 'January '\r\n                break;\r\n            case 2: month = 'February '\r\n                break;\r\n            case 3: month = 'March '\r\n                break;\r\n            case 4: month = 'April '\r\n                break;\r\n            case 5: month = 'May '\r\n                break;\r\n            case 6: month = 'June '\r\n                break;\r\n            case 7: month = 'July '\r\n                break;\r\n            case 8: month = 'August '\r\n                break;\r\n            case 9: month = 'September '\r\n                break;\r\n            case 10: month = 'October '\r\n                break;\r\n            case 11: month = 'November '\r\n                break;\r\n            case 12: month = 'December '\r\n                break;\r\n    }\r\n    let combinedDate=month.concat(dayNumber)\r\n    return(combinedDate)\r\n}\r\n\r\n\r\n\r\nconst FuzeModal = (props) => {\r\n    return (\r\n        <div className={\"ui page modals dimmer transition fuzeModal \" + props.modal}>\r\n            <div className={'ui modal transition ' + props.modal}>\r\n                <i className=\"close icon\" onClick={props.closeModal}></i>\r\n                <div className=\"ui image content\">\r\n                    <img className='centered ui small image modalColor' src=\"https://s2.qwant.com/thumbr/0x380/f/2/a2d510008beabb9b85c8419f334814b052e00070af6d7cca6b218b9626ca3e/thumbs%20up%20child.jpg?u=https%3A%2F%2Fstatic.ecpbuilder.com%2Fclipart%2Fpeople%2Fthumbs%2520up%2520child.jpg&q=0&b=1&p=0&a=1\" alt='random ting'></img>\r\n                </div>\r\n                <div className=\"header modalColor\">\r\n                    <h2>{props.fuzeItem.title}</h2>\r\n                    <p>{props.fuzeItem.date}</p>\r\n                    <p>{props.fuzeItem.startTime} - {props.fuzeItem.endTime}</p>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className='modalInfo'>\r\n                        <div>\r\n                            <div className=\"ui header\">Description</div>\r\n                            <p>{props.fuzeItem.description}</p>\r\n                        </div>\r\n                        <div className='modalContent'>\r\n                            <p><a className='modalLink' href={props.fuzeItem.description} target='_blank' rel='noreferrer'><button class=\"ui button\">\r\n                                Check it out!\r\n                                    </button></a></p>\r\n                        </div>\r\n                        <div className='modalTags'>\r\n                            <p className='modalTagItem'>#{props.fuzeItem.tags1}</p>\r\n                            <p className='modalTagItem'>#{props.fuzeItem.tags2}</p>\r\n                            <p className='modalTagItem'>#{props.fuzeItem.tags3}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Location'>\r\n                        <img className='ui small middle aligned image' alt=\"Random pic- don't expect the best things in the world\" src='https://s2.qwant.com/thumbr/0x380/d/5/edc623b484dfe71f16269638ec033424a016e6097506cbc5cb7122e15bc6e8/wordpress-google-maps-performance.png?u=https%3A%2F%2Fkinsta.com%2Fwp-content%2Fuploads%2F2019%2F01%2Fwordpress-google-maps-performance.png&q=0&b=1&p=0&a=1'></img>\r\n                        <h2>Source</h2>\r\n                        <p>{props.fuzeItem.venue} : {props.fuzeItem.type}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FuzeModal",["45","46"],"C:\\Users\\Danny\\Downloads\\Sync\\Thestrals\\Thestrals-1\\fusion\\client\\src\\FuzeItem.js",["47","48"],"import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nfunction getDateShort(date, type) {\r\n    let month = ''\r\n    let actualDate = date.split('T')\r\n    let splitDate = actualDate[0].split('-')\r\n    let dateNumber = parseInt(splitDate[type])\r\n    if (type === 1) {\r\n        switch (dateNumber) {\r\n            case 1: month = 'Jan'\r\n                break;\r\n            case 2: month = 'Feb'\r\n                break;\r\n            case 3: month = 'Mar'\r\n                break;\r\n            case 4: month = 'Apr'\r\n                break;\r\n            case 5: month = 'May'\r\n                break;\r\n            case 6: month = 'Jun'\r\n                break;\r\n            case 7: month = 'Jul'\r\n                break;\r\n            case 8: month = 'Aug'\r\n                break;\r\n            case 9: month = 'Sep'\r\n                break;\r\n            case 10: month = 'Oct'\r\n                break;\r\n            case 11: month = 'Nov'\r\n                break;\r\n            case 12: month = 'Dec'\r\n                break;\r\n        }\r\n        return month\r\n    } else {\r\n        return splitDate[type]\r\n    }\r\n}\r\n\r\n\r\nconst FuzeItem = (props) => {\r\n\r\n    return (\r\n        <div className=\"fuzeItem ui link card\" onClick={() => {props.openModal(); props.chooseFuze(props.fuzeObject); props.getDateLong(props.fuzeObject.date) }}>\r\n            <div className=\"content\">\r\n                <h2 className=\"fuzeTitle header\">{props.fuzeObject.title}</h2>\r\n            </div>\r\n            <div className=\"fuzeDate image\">\r\n                <i className=\" huge calendar outline icon\"></i>\r\n                <div className=\"date\">\r\n                    <p className=\"month\">{getDateShort(props.fuzeObject.date, 1)}</p>\r\n                    <span className=\"day\">{getDateShort(props.fuzeObject.date, 2)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FuzeItem",{"ruleId":"49","severity":1,"message":"50","line":23,"column":13,"nodeType":"51","endLine":23,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":26,"column":13,"nodeType":"51","endLine":26,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":29,"column":13,"nodeType":"51","endLine":29,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":32,"column":13,"nodeType":"51","endLine":32,"endColumn":25},{"ruleId":"52","severity":1,"message":"53","line":69,"column":9,"nodeType":"54","messageId":"55","endLine":94,"endColumn":10},{"ruleId":"52","severity":1,"message":"53","line":126,"column":9,"nodeType":"54","messageId":"55","endLine":151,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":162,"column":14,"nodeType":"58","messageId":"59","endLine":162,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":10,"column":5,"nodeType":"54","messageId":"55","endLine":35,"endColumn":6},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"56","severity":1,"message":"64","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":18},{"ruleId":"52","severity":1,"message":"53","line":10,"column":9,"nodeType":"54","messageId":"55","endLine":35,"endColumn":10},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'testMap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]